##################### 自定义公共配置

##RABBITMQ
RABBITMQ_HOST: 192.168.0.103
RABBITMQ_PORT: 5672
RABBITMQ_USERNAME: eric
RABBITMQ_PASSWORD: Eric_123321
RABBITMQ_VIRTUAL-HOST: /test

##eureka
EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://192.168.0.103:8761/eureka/    ##客户端
##EUREKA_INSTANCE_IP-ADDRESS: 127.0.0.1  

aaa: 'aaa'



###############################  系统公共配置


spring:
  main:
    allow-bean-definition-overriding: true
    
  
  rabbitmq:
    host: ${RABBITMQ_HOST:192.168.0.103}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:eric}
    password: ${RABBITMQ_PASSWORD:Eric_123321}
    virtual-host: ${RABBITMQ_VIRTUAL-HOST:/test}
  
  
  ## 链路跟踪
  zipkin:
      base-url: ${ZIPKIN_BASE-URL:http://192.168.0.103:9411}
  sleuth:
    sampler:
    #采样率值介于 0 到 1 之间，1 则表示全部采集
      probability: 1
   
    
  datasource:
    url: ${DATASOURCE_URL:jdbc:mysql://192.168.0.103/${spring.application.name}}
    username: root
    password: Eric_123321
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-test-query: SELECT 1 FROM DUAL
      connection-timeout: 30000
      maximum-pool-size: 20
      max-lifetime: 1800000
      minimum-idle: 5    
  jpa:
    open-in-view: true
    hibernate:
    #更新或者创建数据表结构
      ddl-auto: update
    #控制台显示SQL
    show-sql: true
     

###监控端点         
management:
  endpoints:
    web:
      exposure:
        include: "*"
     


eureka:
  instance:
    prefer-ip-address: true  #将自己的ip地址注册到Eureka服务中
    ip-address: ${EUREKA_INSTANCE_IP-ADDRESS:127.0.0.1}
    #instance-id: ${server.address}:${spring.application.name}:${server.port} #指定实例id
    #instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    ##表示eureka clientl间隔多久去拉取服务注册信息，默认为30秒，对于api-gateway，如果要迅速获取服务注册状态，可以缩小该值，比如5秒
    lease-renewal-interval-in-seconds: 5
    #Expiration Seconds，表示eureka server至上一次收到cliente的心跳之后，等待下ー次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
    #默认为 90 秒
    #1.如果该值太大，则很可能将流暈转发过去的时候，该instance已经不存活
    #2.如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉
    #3.该值至少应该大于lease Renewallntervalln Seconds
    lease-expiration-duration-in-seconds: 60
    
    
  redis:
    #配置redis单机模式
#    host: 127.0.0.1 
#    database: 0
#    port: 6379
#    password: 
#    timeout: 2000
    #配置redis集群模式
    #配置属性查看org.redisson.config.Config 
    cluster:
      nodes:
        - 192.168.0.103:6379
        - 192.168.0.103:6380
        - 192.168.0.103:6381
        - 192.168.0.103:6382
        - 192.168.0.103:6383
        - 192.168.0.103:6383
    lettuce:
      pool:
        # 连接池最大连接数 默认8 ，负数表示没有限制
        max-active: 10
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认-1
        max-wait: -1
        # 连接池中的最大空闲连接 默认8
        max-idle: 10
        # 连接池中的最小空闲连接 默认0
        min-idle: 1    
